package IFS;


// relay on algs4 library, please download in advance 
import edu.princeton.cs.algs4.StdArrayIO;
import edu.princeton.cs.algs4.StdRandom;
import edu.princeton.cs.algs4.StdDraw;

public class IFS {
    public static void main(String[] args) {

    	
        // #iterate(should input in command, or give valueï¼‰*
        int trials = Integer.parseInt(args[0]);

        // probability of every transform
        double[] dist = StdArrayIO.readDouble1D();

        // matrix operation result
        double[][] cx = StdArrayIO.readDouble2D();
        double[][] cy = StdArrayIO.readDouble2D();

        // initial value of (x, y)
        double x = 0.0, y = 0.0;

        
        StdDraw.enableDoubleBuffering();
        StdDraw.setCanvasSize(1000,1000);
 //       StdDraw.setXscale(-5, 5);
 //       StdDraw.setYscale(0, 10);
//        StdDraw.setPenRadius(0.02);
        StdDraw.setPenColor(StdDraw.RED);

        
        for (int t = 0; t < trials; t++) { 

            // based on prob distribution to choose transmission 
            int r = StdRandom.discrete(dist); 

            // iterate
            double x0 = cx[r][0]*x + cx[r][1]*y + cx[r][2]; 
            double y0 = cy[r][0]*x + cy[r][1]*y + cy[r][2]; 
            x = x0; 
            y = y0; 

            // plot
            StdDraw.point(x, y); 

            // show per 100 iterates 
            if (t % 100 == 0) {
                StdDraw.show();
                
                StdDraw.pause(10);
                
            }
        } 

                
        StdDraw.show();
        
    } 
} 